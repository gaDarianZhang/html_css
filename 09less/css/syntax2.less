.box1{
    .box2{
        @col:#bfa;
        color: @col;
    }
    >.box3{
        // 不在@col作用域内
        // background-color: @col;
        background-color: orange;
        &:hover{
            color: orchid;
        }
        .box4{
            color: orchid;
            &:hover{
                color: blue;
            }
        }
    }
    //为box1设置一个hover
    //& 就表示外层的父元素
    // 外边写的啥，&就是啥
    &:hover{
        color: orange;
    }
    div &{
        width: 100px;
    }
    // !!!!!!!去看看效果
    &-button{
        color: blue;
    }
}
/*
    duohangzhushi

*/
.p1{
    width: 100px;
    height: 100px;
}
//:extend() 对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.p1){
    color: red;
}
.p3{
    //直接对指定的样式进行引用，这里就相当于将p1的样式在这里进行了复制
    //mixin 混合
    .p1();//.p1;加不加括号都可以
    color: orange;
}

// 使用类选择器时可以在选择器后边添加一个括号，这时我们实际上就创建了一个mixins
.p4(){
    width: 100px;
    height: 100px;
}

.p5{
    .p4();
}
//混合函数 在混合函数中可以直接设置变量
.test(@bg-color:#bfa,@w:100px,@h:200px){
    width: @h;
    height: @w;
    border: 1px solid @bg-color;
}

div{
    // .test;
    //调用混合函数，按顺序传递参数
    // .test(200px,300px,#bfa);
    //或者直接指定传递
    .test(@bg-color:red,@w:10px);
}
.t(@c:#bfa,@w:100px,@h){
    background-color: @c;
    width: @w;
    height: @h;
}
div{
    .t(@h:20px);
}

span{
    color: average(red,blue);
}
html{
    width: 100%;
    height: 100%; 
}
body {
    width: 100%;
    height: 100%;
    background-color: #bfa;
}
body:hover{
    background-color: darken(#bfa,50%);
}